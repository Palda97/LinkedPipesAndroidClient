apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
//apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.devtools.ksp'
apply plugin: 'com.github.jk1.dependency-license-report'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'
apply plugin: 'org.jetbrains.dokka-android'

android {
    compileSdk 34

    namespace "cz.palda97.lpclient"

    defaultConfig {
        applicationId "cz.palda97.lpclient"
        minSdkVersion 21
        targetSdkVersion 34
        versionCode 8
        versionName "1.3.1"

        //testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "cz.palda97.lpclient.NoApplicationRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix = ".debug"
            versionNameSuffix '-DEBUG'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        dataBinding = true
    }

    sourceSets {
        androidTest {
            java.srcDirs += "src/sharedTest/java"
        }
        test {
            java.srcDirs += "src/sharedTest/java"
        }
    }

    dokka {
        outputFormat = 'html'
        outputDirectory = "$buildDir/javadoc"
        /*outputFormat = 'markdown'
        outputDirectory = "$buildDir/markdoc"*/
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.navigation:navigation-fragment:2.3.0'
    implementation 'androidx.navigation:navigation-ui:2.3.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //Room
    def room_version = "2.6.1"
    implementation "androidx.room:room-runtime:$room_version"
    ksp "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    //Coroutines
    //implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9'

    //RecyclerView Swipe Decorator
    implementation 'it.xabaras.android:recyclerview-swipedecorator:1.2.3'

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    //Gson
    implementation 'com.google.code.gson:gson:2.8.6'

    //LiveData
    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    //That weird ssl handshake error
    implementation 'org.conscrypt:conscrypt-android:2.2.1'

    //RecyclerView fast scroll
    implementation 'com.futuremind.recyclerfastscroll:fastscroll:0.2.5'

    //Google Play Services for qr code detection
    implementation 'com.google.android.gms:play-services-vision:20.1.0'

    //Work Manager
    def work_version = "2.9.0"
    implementation "androidx.work:work-runtime-ktx:$work_version"

    //DraggableView
    implementation 'com.github.hyuwah:DraggableView:1.0.1'

    //HTML parser
    implementation 'org.jsoup:jsoup:1.13.1'

    //Matcher containsInAnyOrder
    testImplementation("org.hamcrest:hamcrest:2.2")

    /*
    //PowerMock
    testImplementation "org.powermock:powermock-core:1.7.3"
    testImplementation "org.powermock:powermock-module-junit4:1.7.3"
    testImplementation "org.powermock:powermock-api-mockito2:1.7.3"
    */

    //Observing LiveData in android tests
    androidTestImplementation "android.arch.core:core-testing:1.1.1"

    //Mockk
    androidTestImplementation "io.mockk:mockk-android:1.11.0"
    testImplementation "io.mockk:mockk:1.11.0"

    //Oss-Licenses
    implementation("com.google.android.gms:play-services-oss-licenses:17.0.0")
}
